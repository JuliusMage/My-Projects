# Root .env.example
# These variables might be used by docker-compose or root scripts.
# Service-specific variables should go into their respective .env files (e.g., services/backend-api/.env)

# --- General ---
NODE_ENV=development # development, production, test
LOG_LEVEL=debug # error, warn, info, http, verbose, debug, silly

# --- Docker Compose ---
COMPOSE_PROJECT_NAME=ai_support_dashboard

# --- PostgreSQL (used by backend-api, potentially others) ---
# These are typically for local docker-compose setup.
# For deployed environments, connection strings or IAM auth might be used.
DB_HOST=localhost
DB_PORT=5432
DB_USER=admin       # Standardized to DB_USER
DB_PASSWORD=secret
DB_NAME=support_dashboard_db # Standardized to DB_NAME
TYPEORM_SYNCHRONIZE=false # For backend-api, set to true in local .env for dev sync

# --- Redis (used by backend-api, ai-service, data-processor) ---
# For local docker-compose setup
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD= # Optional, if your Redis requires a password

# --- OpenAI (used by ai-service) ---
OPENAI_API_KEY="mock-openai-key-replace-me"
# OPENAI_MODEL="gpt-3.5-turbo" # or "gpt-4" etc.
LLM_PROVIDER="openai" # or "local" (Ensure this matches validation schema in app.module.ts)

# --- Local LLM (if LLM_PROVIDER="local", used by ai-service) ---
# LOCAL_LLM_URL="http://localhost:11434" # Example for Ollama running LLaMA

# --- Backend API ---
API_PORT=3000 # Often defined in service-specific .env or Dockerfile/docker-compose

# --- JWT Secrets (used by backend-api) ---
# Ensure these are strong, random strings in production
JWT_SECRET="your-super-secret-jwt-token"
JWT_REFRESH_SECRET="your-super-secret-jwt-refresh-token"
JWT_ACCESS_TOKEN_EXPIRATION="15m" # e.g., 15 minutes
JWT_REFRESH_TOKEN_EXPIRATION="7d" # e.g., 7 days

# --- Frontend ---
FRONTEND_URL="http://localhost:3001" # For CORS configuration on the backend
FRONTEND_PORT=3001 # Port for frontend dev server

# --- AWS Credentials (for local development interacting with AWS services if not using IAM roles from EC2/ECS/EKS) ---
# These are dangerous to commit even in .env.example if accidentally filled.
# Prefer using AWS CLI profiles or instance profiles.
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_REGION=your-aws-region # e.g., us-east-1

# Note: For production, sensitive values like API keys and database credentials
# should be managed securely, e.g., via AWS Secrets Manager or HashiCorp Vault,
# and injected into the application environment, not hardcoded in .env files committed to git.
# .env files are primarily for local development convenience.
# Remember to add specific .env files (from .env.example) to each service's .gitignore if not already covered.
